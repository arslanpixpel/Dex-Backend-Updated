const providernode = {
  _events: {},
  _eventsCount: 3,
  messageHandler: {},
  jsonRpcClient: { provider: {} },
  grpcClient: {
    client: {
      _transport: {
        messageHandler: "[Circular Reference]",
        transport: { defaultOptions: { baseUrl: "" } },
      },
      typeName: "concordium.v2.Queries",
      methods: [
        {
          name: "GetBlocks",
          serverStreaming: true,
          options: {},
          I: {
            defaultCheckDepth: 16,
            typeName: "concordium.v2.Empty",
            fields: [],
            options: {},
            refTypeCheck: { fields: "[Circular Reference]" },
            refJsonReader: { info: "[Circular Reference]" },
            refJsonWriter: { fields: "[Circular Reference]" },
            refBinReader: { info: "[Circular Reference]" },
            refBinWriter: { info: "[Circular Reference]" },
          },
          O: {
            defaultCheckDepth: 16,
            typeName: "concordium.v2.ArrivedBlockInfo",
            fields: [
              {
                no: 1,
                name: "hash",
                kind: "message",
                localName: "hash",
                jsonName: "hash",
                repeat: 0,
                opt: true,
              },
              {
                no: 2,
                name: "height",
                kind: "message",
                localName: "height",
                jsonName: "height",
                repeat: 0,
                opt: true,
              },
            ],
            options: {},
            refTypeCheck: { fields: "[Circular Reference]" },
            refJsonReader: { info: "[Circular Reference]" },
            refJsonWriter: { fields: "[Circular Reference]" },
            refBinReader: { info: "[Circular Reference]" },
            refBinWriter: { info: "[Circular Reference]" },
          },
          service: {
            typeName: "concordium.v2.Queries",
            methods: "[Circular Reference]",
            options: {},
          },
          localName: "getBlocks",
          clientStreaming: false,
        },
        {
          name: "GetFinalizedBlocks",
          serverStreaming: true,
          options: {},
          I: "[Circular Reference]",
          O: {
            defaultCheckDepth: 16,
            typeName: "concordium.v2.FinalizedBlockInfo",
            fields: [
              {
                no: 1,
                name: "hash",
                kind: "message",
                localName: "hash",
                jsonName: "hash",
                repeat: 0,
                opt: true,
              },
              {
                no: 2,
                name: "height",
                kind: "message",
                localName: "height",
                jsonName: "height",
                repeat: 0,
                opt: true,
              },
            ],
            options: {},
            refTypeCheck: { fields: "[Circular Reference]" },
            refJsonReader: { info: "[Circular Reference]" },
            refJsonWriter: { fields: "[Circular Reference]" },
            refBinReader: { info: "[Circular Reference]" },
            refBinWriter: { info: "[Circular Reference]" },
          },
          service: "[Circular Reference]",
          localName: "getFinalizedBlocks",
          clientStreaming: false,
        },
        {
          name: "GetAccountInfo",
          options: {},
          I: {
            defaultCheckDepth: 16,
            typeName: "concordium.v2.AccountInfoRequest",
            fields: [
              {
                no: 1,
                name: "block_hash",
                kind: "message",
                localName: "blockHash",
                jsonName: "blockHash",
                repeat: 0,
                opt: true,
              },
              {
                no: 2,
                name: "account_identifier",
                kind: "message",
                localName: "accountIdentifier",
                jsonName: "accountIdentifier",
                repeat: 0,
                opt: true,
              },
            ],
            options: {},
            refTypeCheck: { fields: "[Circular Reference]" },
            refJsonReader: { info: "[Circular Reference]" },
            refJsonWriter: { fields: "[Circular Reference]" },
            refBinReader: { info: "[Circular Reference]" },
            refBinWriter: { info: "[Circular Reference]" },
          },
          O: {
            defaultCheckDepth: 16,
            typeName: "concordium.v2.AccountInfo",
            fields: [
              {
                no: 1,
                name: "sequence_number",
                kind: "message",
                localName: "sequenceNumber",
                jsonName: "sequenceNumber",
                repeat: 0,
                opt: true,
              },
              {
                no: 2,
                name: "amount",
                kind: "message",
                localName: "amount",
                jsonName: "amount",
                repeat: 0,
                opt: true,
              },
              {
                no: 3,
                name: "schedule",
                kind: "message",
                localName: "schedule",
                jsonName: "schedule",
                repeat: 0,
                opt: true,
              },
              {
                no: 4,
                name: "creds",
                kind: "map",
                K: 13,
                V: { kind: "message" },
                localName: "creds",
                jsonName: "creds",
                repeat: 0,
                opt: false,
              },
              {
                no: 5,
                name: "threshold",
                kind: "message",
                localName: "threshold",
                jsonName: "threshold",
                repeat: 0,
                opt: true,
              },
              {
                no: 6,
                name: "encrypted_balance",
                kind: "message",
                localName: "encryptedBalance",
                jsonName: "encryptedBalance",
                repeat: 0,
                opt: true,
              },
              {
                no: 7,
                name: "encryption_key",
                kind: "message",
                localName: "encryptionKey",
                jsonName: "encryptionKey",
                repeat: 0,
                opt: true,
              },
              {
                no: 8,
                name: "index",
                kind: "message",
                localName: "index",
                jsonName: "index",
                repeat: 0,
                opt: true,
              },
              {
                no: 9,
                name: "stake",
                kind: "message",
                localName: "stake",
                jsonName: "stake",
                repeat: 0,
                opt: true,
              },
              {
                no: 10,
                name: "address",
                kind: "message",
                localName: "address",
                jsonName: "address",
                repeat: 0,
                opt: true,
              },
            ],
            options: {},
            refTypeCheck: { fields: "[Circular Reference]" },
            refJsonReader: { info: "[Circular Reference]" },
            refJsonWriter: { fields: "[Circular Reference]" },
            refBinReader: { info: "[Circular Reference]" },
            refBinWriter: { info: "[Circular Reference]" },
          },
          service: "[Circular Reference]",
          localName: "getAccountInfo",
          serverStreaming: false,
          clientStreaming: false,
        },
        {
          name: "GetAccountList",
          serverStreaming: true,
          options: {},
          I: {
            defaultCheckDepth: 16,
            typeName: "concordium.v2.BlockHashInput",
            fields: [
              {
                no: 1,
                name: "best",
                kind: "message",
                oneof: "blockHashInput",
                localName: "best",
                jsonName: "best",
                repeat: 0,
                opt: false,
              },
              {
                no: 2,
                name: "last_final",
                kind: "message",
                oneof: "blockHashInput",
                localName: "lastFinal",
                jsonName: "lastFinal",
                repeat: 0,
                opt: false,
              },
              {
                no: 3,
                name: "given",
                kind: "message",
                oneof: "blockHashInput",
                localName: "given",
                jsonName: "given",
                repeat: 0,
                opt: false,
              },
              {
                no: 4,
                name: "absolute_height",
                kind: "message",
                oneof: "blockHashInput",
                localName: "absoluteHeight",
                jsonName: "absoluteHeight",
                repeat: 0,
                opt: false,
              },
              {
                no: 5,
                name: "relative_height",
                kind: "message",
                oneof: "blockHashInput",
                localName: "relativeHeight",
                jsonName: "relativeHeight",
                repeat: 0,
                opt: false,
              },
            ],
            options: {},
            refTypeCheck: { fields: "[Circular Reference]" },
            refJsonReader: { info: "[Circular Reference]" },
            refJsonWriter: { fields: "[Circular Reference]" },
            refBinReader: { info: "[Circular Reference]" },
            refBinWriter: { info: "[Circular Reference]" },
          },
          O: {
            defaultCheckDepth: 16,
            typeName: "concordium.v2.AccountAddress",
            fields: [
              {
                no: 1,
                name: "value",
                kind: "scalar",
                T: 12,
                localName: "value",
                jsonName: "value",
                repeat: 0,
                opt: false,
              },
            ],
            options: {},
            refTypeCheck: { fields: "[Circular Reference]" },
            refJsonReader: { info: "[Circular Reference]" },
            refJsonWriter: { fields: "[Circular Reference]" },
            refBinReader: { info: "[Circular Reference]" },
            refBinWriter: { info: "[Circular Reference]" },
          },
          service: "[Circular Reference]",
          localName: "getAccountList",
          clientStreaming: false,
        },
        {
          name: "GetModuleList",
          serverStreaming: true,
          options: {},
          I: "[Circular Reference]",
          O: {
            defaultCheckDepth: 16,
            typeName: "concordium.v2.ModuleRef",
            fields: [
              {
                no: 1,
                name: "value",
                kind: "scalar",
                T: 12,
                localName: "value",
                jsonName: "value",
                repeat: 0,
                opt: false,
              },
            ],
            options: {},
            refTypeCheck: { fields: "[Circular Reference]" },
            refJsonReader: { info: "[Circular Reference]" },
            refJsonWriter: { fields: "[Circular Reference]" },
            refBinReader: { info: "[Circular Reference]" },
            refBinWriter: { info: "[Circular Reference]" },
          },
          service: "[Circular Reference]",
          localName: "getModuleList",
          clientStreaming: false,
        },
        {
          name: "GetAncestors",
          serverStreaming: true,
          options: {},
          I: {
            defaultCheckDepth: 16,
            typeName: "concordium.v2.AncestorsRequest",
            fields: [
              {
                no: 1,
                name: "block_hash",
                kind: "message",
                localName: "blockHash",
                jsonName: "blockHash",
                repeat: 0,
                opt: true,
              },
              {
                no: 2,
                name: "amount",
                kind: "scalar",
                T: 4,
                L: 0,
                localName: "amount",
                jsonName: "amount",
                repeat: 0,
                opt: false,
              },
            ],
            options: {},
            refTypeCheck: { fields: "[Circular Reference]" },
            refJsonReader: { info: "[Circular Reference]" },
            refJsonWriter: { fields: "[Circular Reference]" },
            refBinReader: { info: "[Circular Reference]" },
            refBinWriter: { info: "[Circular Reference]" },
          },
          O: {
            defaultCheckDepth: 16,
            typeName: "concordium.v2.BlockHash",
            fields: [
              {
                no: 1,
                name: "value",
                kind: "scalar",
                T: 12,
                localName: "value",
                jsonName: "value",
                repeat: 0,
                opt: false,
              },
            ],
            options: {},
            refTypeCheck: { fields: "[Circular Reference]" },
            refJsonReader: { info: "[Circular Reference]" },
            refJsonWriter: { fields: "[Circular Reference]" },
            refBinReader: { info: "[Circular Reference]" },
            refBinWriter: { info: "[Circular Reference]" },
          },
          service: "[Circular Reference]",
          localName: "getAncestors",
          clientStreaming: false,
        },
        {
          name: "GetModuleSource",
          options: {},
          I: {
            defaultCheckDepth: 16,
            typeName: "concordium.v2.ModuleSourceRequest",
            fields: [
              {
                no: 1,
                name: "block_hash",
                kind: "message",
                localName: "blockHash",
                jsonName: "blockHash",
                repeat: 0,
                opt: true,
              },
              {
                no: 2,
                name: "module_ref",
                kind: "message",
                localName: "moduleRef",
                jsonName: "moduleRef",
                repeat: 0,
                opt: true,
              },
            ],
            options: {},
            refTypeCheck: { fields: "[Circular Reference]" },
            refJsonReader: { info: "[Circular Reference]" },
            refJsonWriter: { fields: "[Circular Reference]" },
            refBinReader: { info: "[Circular Reference]" },
            refBinWriter: { info: "[Circular Reference]" },
          },
          O: {
            defaultCheckDepth: 16,
            typeName: "concordium.v2.VersionedModuleSource",
            fields: [
              {
                no: 1,
                name: "v0",
                kind: "message",
                oneof: "module",
                localName: "v0",
                jsonName: "v0",
                repeat: 0,
                opt: false,
              },
              {
                no: 2,
                name: "v1",
                kind: "message",
                oneof: "module",
                localName: "v1",
                jsonName: "v1",
                repeat: 0,
                opt: false,
              },
            ],
            options: {},
            refTypeCheck: { fields: "[Circular Reference]" },
            refJsonReader: { info: "[Circular Reference]" },
            refJsonWriter: { fields: "[Circular Reference]" },
            refBinReader: { info: "[Circular Reference]" },
            refBinWriter: { info: "[Circular Reference]" },
          },
          service: "[Circular Reference]",
          localName: "getModuleSource",
          serverStreaming: false,
          clientStreaming: false,
        },
        {
          name: "GetInstanceList",
          serverStreaming: true,
          options: {},
          I: "[Circular Reference]",
          O: {
            defaultCheckDepth: 16,
            typeName: "concordium.v2.ContractAddress",
            fields: [
              {
                no: 1,
                name: "index",
                kind: "scalar",
                T: 4,
                L: 0,
                localName: "index",
                jsonName: "index",
                repeat: 0,
                opt: false,
              },
              {
                no: 2,
                name: "subindex",
                kind: "scalar",
                T: 4,
                L: 0,
                localName: "subindex",
                jsonName: "subindex",
                repeat: 0,
                opt: false,
              },
            ],
            options: {},
            refTypeCheck: { fields: "[Circular Reference]" },
            refJsonReader: { info: "[Circular Reference]" },
            refJsonWriter: { fields: "[Circular Reference]" },
            refBinReader: { info: "[Circular Reference]" },
            refBinWriter: { info: "[Circular Reference]" },
          },
          service: "[Circular Reference]",
          localName: "getInstanceList",
          clientStreaming: false,
        },
        {
          name: "GetInstanceInfo",
          options: {},
          I: {
            defaultCheckDepth: 16,
            typeName: "concordium.v2.InstanceInfoRequest",
            fields: [
              {
                no: 1,
                name: "block_hash",
                kind: "message",
                localName: "blockHash",
                jsonName: "blockHash",
                repeat: 0,
                opt: true,
              },
              {
                no: 2,
                name: "address",
                kind: "message",
                localName: "address",
                jsonName: "address",
                repeat: 0,
                opt: true,
              },
            ],
            options: {},
            refTypeCheck: { fields: "[Circular Reference]" },
            refJsonReader: { info: "[Circular Reference]" },
            refJsonWriter: { fields: "[Circular Reference]" },
            refBinReader: { info: "[Circular Reference]" },
            refBinWriter: { info: "[Circular Reference]" },
          },
          O: {
            defaultCheckDepth: 16,
            typeName: "concordium.v2.InstanceInfo",
            fields: [
              {
                no: 1,
                name: "v0",
                kind: "message",
                oneof: "version",
                localName: "v0",
                jsonName: "v0",
                repeat: 0,
                opt: false,
              },
              {
                no: 2,
                name: "v1",
                kind: "message",
                oneof: "version",
                localName: "v1",
                jsonName: "v1",
                repeat: 0,
                opt: false,
              },
            ],
            options: {},
            refTypeCheck: { fields: "[Circular Reference]" },
            refJsonReader: { info: "[Circular Reference]" },
            refJsonWriter: { fields: "[Circular Reference]" },
            refBinReader: { info: "[Circular Reference]" },
            refBinWriter: { info: "[Circular Reference]" },
          },
          service: "[Circular Reference]",
          localName: "getInstanceInfo",
          serverStreaming: false,
          clientStreaming: false,
        },
        {
          name: "GetInstanceState",
          serverStreaming: true,
          options: {},
          I: "[Circular Reference]",
          O: {
            defaultCheckDepth: 16,
            typeName: "concordium.v2.InstanceStateKVPair",
            fields: [
              {
                no: 1,
                name: "key",
                kind: "scalar",
                T: 12,
                localName: "key",
                jsonName: "key",
                repeat: 0,
                opt: false,
              },
              {
                no: 2,
                name: "value",
                kind: "scalar",
                T: 12,
                localName: "value",
                jsonName: "value",
                repeat: 0,
                opt: false,
              },
            ],
            options: {},
            refTypeCheck: { fields: "[Circular Reference]" },
            refJsonReader: { info: "[Circular Reference]" },
            refJsonWriter: { fields: "[Circular Reference]" },
            refBinReader: { info: "[Circular Reference]" },
            refBinWriter: { info: "[Circular Reference]" },
          },
          service: "[Circular Reference]",
          localName: "getInstanceState",
          clientStreaming: false,
        },
        {
          name: "InstanceStateLookup",
          options: {},
          I: {
            defaultCheckDepth: 16,
            typeName: "concordium.v2.InstanceStateLookupRequest",
            fields: [
              {
                no: 1,
                name: "block_hash",
                kind: "message",
                localName: "blockHash",
                jsonName: "blockHash",
                repeat: 0,
                opt: true,
              },
              {
                no: 2,
                name: "address",
                kind: "message",
                localName: "address",
                jsonName: "address",
                repeat: 0,
                opt: true,
              },
              {
                no: 3,
                name: "key",
                kind: "scalar",
                T: 12,
                localName: "key",
                jsonName: "key",
                repeat: 0,
                opt: false,
              },
            ],
            options: {},
            refTypeCheck: { fields: "[Circular Reference]" },
            refJsonReader: { info: "[Circular Reference]" },
            refJsonWriter: { fields: "[Circular Reference]" },
            refBinReader: { info: "[Circular Reference]" },
            refBinWriter: { info: "[Circular Reference]" },
          },
          O: {
            defaultCheckDepth: 16,
            typeName: "concordium.v2.InstanceStateValueAtKey",
            fields: [
              {
                no: 1,
                name: "value",
                kind: "scalar",
                T: 12,
                localName: "value",
                jsonName: "value",
                repeat: 0,
                opt: false,
              },
            ],
            options: {},
            refTypeCheck: { fields: "[Circular Reference]" },
            refJsonReader: { info: "[Circular Reference]" },
            refJsonWriter: { fields: "[Circular Reference]" },
            refBinReader: { info: "[Circular Reference]" },
            refBinWriter: { info: "[Circular Reference]" },
          },
          service: "[Circular Reference]",
          localName: "instanceStateLookup",
          serverStreaming: false,
          clientStreaming: false,
        },
        {
          name: "GetNextAccountSequenceNumber",
          options: {},
          I: "[Circular Reference]",
          O: {
            defaultCheckDepth: 16,
            typeName: "concordium.v2.NextAccountSequenceNumber",
            fields: [
              {
                no: 1,
                name: "sequence_number",
                kind: "message",
                localName: "sequenceNumber",
                jsonName: "sequenceNumber",
                repeat: 0,
                opt: true,
              },
              {
                no: 2,
                name: "all_final",
                kind: "scalar",
                T: 8,
                localName: "allFinal",
                jsonName: "allFinal",
                repeat: 0,
                opt: false,
              },
            ],
            options: {},
            refTypeCheck: { fields: "[Circular Reference]" },
            refJsonReader: { info: "[Circular Reference]" },
            refJsonWriter: { fields: "[Circular Reference]" },
            refBinReader: { info: "[Circular Reference]" },
            refBinWriter: { info: "[Circular Reference]" },
          },
          service: "[Circular Reference]",
          localName: "getNextAccountSequenceNumber",
          serverStreaming: false,
          clientStreaming: false,
        },
        {
          name: "GetConsensusInfo",
          options: {},
          I: "[Circular Reference]",
          O: {
            defaultCheckDepth: 16,
            typeName: "concordium.v2.ConsensusInfo",
            fields: [
              {
                no: 1,
                name: "best_block",
                kind: "message",
                localName: "bestBlock",
                jsonName: "bestBlock",
                repeat: 0,
                opt: true,
              },
              {
                no: 2,
                name: "genesis_block",
                kind: "message",
                localName: "genesisBlock",
                jsonName: "genesisBlock",
                repeat: 0,
                opt: true,
              },
              {
                no: 3,
                name: "genesis_time",
                kind: "message",
                localName: "genesisTime",
                jsonName: "genesisTime",
                repeat: 0,
                opt: true,
              },
              {
                no: 4,
                name: "slot_duration",
                kind: "message",
                localName: "slotDuration",
                jsonName: "slotDuration",
                repeat: 0,
                opt: true,
              },
              {
                no: 5,
                name: "epoch_duration",
                kind: "message",
                localName: "epochDuration",
                jsonName: "epochDuration",
                repeat: 0,
                opt: true,
              },
              {
                no: 6,
                name: "last_finalized_block",
                kind: "message",
                localName: "lastFinalizedBlock",
                jsonName: "lastFinalizedBlock",
                repeat: 0,
                opt: true,
              },
              {
                no: 7,
                name: "best_block_height",
                kind: "message",
                localName: "bestBlockHeight",
                jsonName: "bestBlockHeight",
                repeat: 0,
                opt: true,
              },
              {
                no: 8,
                name: "last_finalized_block_height",
                kind: "message",
                localName: "lastFinalizedBlockHeight",
                jsonName: "lastFinalizedBlockHeight",
                repeat: 0,
                opt: true,
              },
              {
                no: 9,
                name: "blocks_received_count",
                kind: "scalar",
                T: 13,
                localName: "blocksReceivedCount",
                jsonName: "blocksReceivedCount",
                repeat: 0,
                opt: false,
              },
              {
                no: 10,
                name: "block_last_received_time",
                kind: "message",
                localName: "blockLastReceivedTime",
                jsonName: "blockLastReceivedTime",
                repeat: 0,
                opt: true,
              },
              {
                no: 11,
                name: "block_receive_latency_ema",
                kind: "scalar",
                T: 1,
                localName: "blockReceiveLatencyEma",
                jsonName: "blockReceiveLatencyEma",
                repeat: 0,
                opt: false,
              },
              {
                no: 12,
                name: "block_receive_latency_emsd",
                kind: "scalar",
                T: 1,
                localName: "blockReceiveLatencyEmsd",
                jsonName: "blockReceiveLatencyEmsd",
                repeat: 0,
                opt: false,
              },
              {
                no: 13,
                name: "block_receive_period_ema",
                kind: "scalar",
                opt: true,
                T: 1,
                localName: "blockReceivePeriodEma",
                jsonName: "blockReceivePeriodEma",
                repeat: 0,
              },
              {
                no: 14,
                name: "block_receive_period_emsd",
                kind: "scalar",
                opt: true,
                T: 1,
                localName: "blockReceivePeriodEmsd",
                jsonName: "blockReceivePeriodEmsd",
                repeat: 0,
              },
              {
                no: 15,
                name: "blocks_verified_count",
                kind: "scalar",
                T: 13,
                localName: "blocksVerifiedCount",
                jsonName: "blocksVerifiedCount",
                repeat: 0,
                opt: false,
              },
              {
                no: 16,
                name: "block_last_arrived_time",
                kind: "message",
                localName: "blockLastArrivedTime",
                jsonName: "blockLastArrivedTime",
                repeat: 0,
                opt: true,
              },
              {
                no: 17,
                name: "block_arrive_latency_ema",
                kind: "scalar",
                T: 1,
                localName: "blockArriveLatencyEma",
                jsonName: "blockArriveLatencyEma",
                repeat: 0,
                opt: false,
              },
              {
                no: 18,
                name: "block_arrive_latency_emsd",
                kind: "scalar",
                T: 1,
                localName: "blockArriveLatencyEmsd",
                jsonName: "blockArriveLatencyEmsd",
                repeat: 0,
                opt: false,
              },
              {
                no: 19,
                name: "block_arrive_period_ema",
                kind: "scalar",
                opt: true,
                T: 1,
                localName: "blockArrivePeriodEma",
                jsonName: "blockArrivePeriodEma",
                repeat: 0,
              },
              {
                no: 20,
                name: "block_arrive_period_emsd",
                kind: "scalar",
                opt: true,
                T: 1,
                localName: "blockArrivePeriodEmsd",
                jsonName: "blockArrivePeriodEmsd",
                repeat: 0,
              },
              {
                no: 21,
                name: "transactions_per_block_ema",
                kind: "scalar",
                T: 1,
                localName: "transactionsPerBlockEma",
                jsonName: "transactionsPerBlockEma",
                repeat: 0,
                opt: false,
              },
              {
                no: 22,
                name: "transactions_per_block_emsd",
                kind: "scalar",
                T: 1,
                localName: "transactionsPerBlockEmsd",
                jsonName: "transactionsPerBlockEmsd",
                repeat: 0,
                opt: false,
              },
              {
                no: 23,
                name: "finalization_count",
                kind: "scalar",
                T: 13,
                localName: "finalizationCount",
                jsonName: "finalizationCount",
                repeat: 0,
                opt: false,
              },
              {
                no: 24,
                name: "last_finalized_time",
                kind: "message",
                localName: "lastFinalizedTime",
                jsonName: "lastFinalizedTime",
                repeat: 0,
                opt: true,
              },
              {
                no: 25,
                name: "finalization_period_ema",
                kind: "scalar",
                opt: true,
                T: 1,
                localName: "finalizationPeriodEma",
                jsonName: "finalizationPeriodEma",
                repeat: 0,
              },
              {
                no: 26,
                name: "finalization_period_emsd",
                kind: "scalar",
                opt: true,
                T: 1,
                localName: "finalizationPeriodEmsd",
                jsonName: "finalizationPeriodEmsd",
                repeat: 0,
              },
              {
                no: 27,
                name: "protocol_version",
                kind: "enum",
                localName: "protocolVersion",
                jsonName: "protocolVersion",
                repeat: 0,
                opt: false,
              },
              {
                no: 28,
                name: "genesis_index",
                kind: "message",
                localName: "genesisIndex",
                jsonName: "genesisIndex",
                repeat: 0,
                opt: true,
              },
              {
                no: 29,
                name: "current_era_genesis_block",
                kind: "message",
                localName: "currentEraGenesisBlock",
                jsonName: "currentEraGenesisBlock",
                repeat: 0,
                opt: true,
              },
              {
                no: 30,
                name: "current_era_genesis_time",
                kind: "message",
                localName: "currentEraGenesisTime",
                jsonName: "currentEraGenesisTime",
                repeat: 0,
                opt: true,
              },
              {
                no: 31,
                name: "current_timeout_duration",
                kind: "message",
                localName: "currentTimeoutDuration",
                jsonName: "currentTimeoutDuration",
                repeat: 0,
                opt: true,
              },
              {
                no: 32,
                name: "current_round",
                kind: "message",
                localName: "currentRound",
                jsonName: "currentRound",
                repeat: 0,
                opt: true,
              },
              {
                no: 33,
                name: "current_epoch",
                kind: "message",
                localName: "currentEpoch",
                jsonName: "currentEpoch",
                repeat: 0,
                opt: true,
              },
              {
                no: 34,
                name: "trigger_block_time",
                kind: "message",
                localName: "triggerBlockTime",
                jsonName: "triggerBlockTime",
                repeat: 0,
                opt: true,
              },
            ],
            options: {},
            refTypeCheck: { fields: "[Circular Reference]" },
            refJsonReader: { info: "[Circular Reference]" },
            refJsonWriter: { fields: "[Circular Reference]" },
            refBinReader: { info: "[Circular Reference]" },
            refBinWriter: { info: "[Circular Reference]" },
          },
          service: "[Circular Reference]",
          localName: "getConsensusInfo",
          serverStreaming: false,
          clientStreaming: false,
        },
        {
          name: "GetBlockItemStatus",
          options: {},
          I: {
            defaultCheckDepth: 16,
            typeName: "concordium.v2.TransactionHash",
            fields: [
              {
                no: 1,
                name: "value",
                kind: "scalar",
                T: 12,
                localName: "value",
                jsonName: "value",
                repeat: 0,
                opt: false,
              },
            ],
            options: {},
            refTypeCheck: { fields: "[Circular Reference]" },
            refJsonReader: { info: "[Circular Reference]" },
            refJsonWriter: { fields: "[Circular Reference]" },
            refBinReader: { info: "[Circular Reference]" },
            refBinWriter: { info: "[Circular Reference]" },
          },
          O: {
            defaultCheckDepth: 16,
            typeName: "concordium.v2.BlockItemStatus",
            fields: [
              {
                no: 1,
                name: "received",
                kind: "message",
                oneof: "status",
                localName: "received",
                jsonName: "received",
                repeat: 0,
                opt: false,
              },
              {
                no: 2,
                name: "committed",
                kind: "message",
                oneof: "status",
                localName: "committed",
                jsonName: "committed",
                repeat: 0,
                opt: false,
              },
              {
                no: 3,
                name: "finalized",
                kind: "message",
                oneof: "status",
                localName: "finalized",
                jsonName: "finalized",
                repeat: 0,
                opt: false,
              },
            ],
            options: {},
            refTypeCheck: { fields: "[Circular Reference]" },
            refJsonReader: { info: "[Circular Reference]" },
            refJsonWriter: { fields: "[Circular Reference]" },
            refBinReader: { info: "[Circular Reference]" },
            refBinWriter: { info: "[Circular Reference]" },
          },
          service: "[Circular Reference]",
          localName: "getBlockItemStatus",
          serverStreaming: false,
          clientStreaming: false,
        },
        {
          name: "GetCryptographicParameters",
          options: {},
          I: "[Circular Reference]",
          O: {
            defaultCheckDepth: 16,
            typeName: "concordium.v2.CryptographicParameters",
            fields: [
              {
                no: 1,
                name: "genesis_string",
                kind: "scalar",
                T: 9,
                localName: "genesisString",
                jsonName: "genesisString",
                repeat: 0,
                opt: false,
              },
              {
                no: 2,
                name: "bulletproof_generators",
                kind: "scalar",
                T: 12,
                localName: "bulletproofGenerators",
                jsonName: "bulletproofGenerators",
                repeat: 0,
                opt: false,
              },
              {
                no: 3,
                name: "on_chain_commitment_key",
                kind: "scalar",
                T: 12,
                localName: "onChainCommitmentKey",
                jsonName: "onChainCommitmentKey",
                repeat: 0,
                opt: false,
              },
            ],
            options: {},
            refTypeCheck: { fields: "[Circular Reference]" },
            refJsonReader: { info: "[Circular Reference]" },
            refJsonWriter: { fields: "[Circular Reference]" },
            refBinReader: { info: "[Circular Reference]" },
            refBinWriter: { info: "[Circular Reference]" },
          },
          service: "[Circular Reference]",
          localName: "getCryptographicParameters",
          serverStreaming: false,
          clientStreaming: false,
        },
        {
          name: "GetBlockInfo",
          options: {},
          I: "[Circular Reference]",
          O: {
            defaultCheckDepth: 16,
            typeName: "concordium.v2.BlockInfo",
            fields: [
              {
                no: 1,
                name: "hash",
                kind: "message",
                localName: "hash",
                jsonName: "hash",
                repeat: 0,
                opt: true,
              },
              {
                no: 2,
                name: "height",
                kind: "message",
                localName: "height",
                jsonName: "height",
                repeat: 0,
                opt: true,
              },
              {
                no: 3,
                name: "parent_block",
                kind: "message",
                localName: "parentBlock",
                jsonName: "parentBlock",
                repeat: 0,
                opt: true,
              },
              {
                no: 4,
                name: "last_finalized_block",
                kind: "message",
                localName: "lastFinalizedBlock",
                jsonName: "lastFinalizedBlock",
                repeat: 0,
                opt: true,
              },
              {
                no: 5,
                name: "genesis_index",
                kind: "message",
                localName: "genesisIndex",
                jsonName: "genesisIndex",
                repeat: 0,
                opt: true,
              },
              {
                no: 6,
                name: "era_block_height",
                kind: "message",
                localName: "eraBlockHeight",
                jsonName: "eraBlockHeight",
                repeat: 0,
                opt: true,
              },
              {
                no: 7,
                name: "receive_time",
                kind: "message",
                localName: "receiveTime",
                jsonName: "receiveTime",
                repeat: 0,
                opt: true,
              },
              {
                no: 8,
                name: "arrive_time",
                kind: "message",
                localName: "arriveTime",
                jsonName: "arriveTime",
                repeat: 0,
                opt: true,
              },
              {
                no: 9,
                name: "slot_number",
                kind: "message",
                localName: "slotNumber",
                jsonName: "slotNumber",
                repeat: 0,
                opt: true,
              },
              {
                no: 10,
                name: "slot_time",
                kind: "message",
                localName: "slotTime",
                jsonName: "slotTime",
                repeat: 0,
                opt: true,
              },
              {
                no: 11,
                name: "baker",
                kind: "message",
                localName: "baker",
                jsonName: "baker",
                repeat: 0,
                opt: true,
              },
              {
                no: 12,
                name: "finalized",
                kind: "scalar",
                T: 8,
                localName: "finalized",
                jsonName: "finalized",
                repeat: 0,
                opt: false,
              },
              {
                no: 13,
                name: "transaction_count",
                kind: "scalar",
                T: 13,
                localName: "transactionCount",
                jsonName: "transactionCount",
                repeat: 0,
                opt: false,
              },
              {
                no: 14,
                name: "transactions_energy_cost",
                kind: "message",
                localName: "transactionsEnergyCost",
                jsonName: "transactionsEnergyCost",
                repeat: 0,
                opt: true,
              },
              {
                no: 15,
                name: "transactions_size",
                kind: "scalar",
                T: 13,
                localName: "transactionsSize",
                jsonName: "transactionsSize",
                repeat: 0,
                opt: false,
              },
              {
                no: 16,
                name: "state_hash",
                kind: "message",
                localName: "stateHash",
                jsonName: "stateHash",
                repeat: 0,
                opt: true,
              },
              {
                no: 17,
                name: "protocol_version",
                kind: "enum",
                localName: "protocolVersion",
                jsonName: "protocolVersion",
                repeat: 0,
                opt: false,
              },
              {
                no: 18,
                name: "round",
                kind: "message",
                localName: "round",
                jsonName: "round",
                repeat: 0,
                opt: true,
              },
              {
                no: 19,
                name: "epoch",
                kind: "message",
                localName: "epoch",
                jsonName: "epoch",
                repeat: 0,
                opt: true,
              },
            ],
            options: {},
            refTypeCheck: { fields: "[Circular Reference]" },
            refJsonReader: { info: "[Circular Reference]" },
            refJsonWriter: { fields: "[Circular Reference]" },
            refBinReader: { info: "[Circular Reference]" },
            refBinWriter: { info: "[Circular Reference]" },
          },
          service: "[Circular Reference]",
          localName: "getBlockInfo",
          serverStreaming: false,
          clientStreaming: false,
        },
        {
          name: "GetBakerList",
          serverStreaming: true,
          options: {},
          I: "[Circular Reference]",
          O: {
            defaultCheckDepth: 16,
            typeName: "concordium.v2.BakerId",
            fields: [
              {
                no: 1,
                name: "value",
                kind: "scalar",
                T: 4,
                L: 0,
                localName: "value",
                jsonName: "value",
                repeat: 0,
                opt: false,
              },
            ],
            options: {},
            refTypeCheck: { fields: "[Circular Reference]" },
            refJsonReader: { info: "[Circular Reference]" },
            refJsonWriter: { fields: "[Circular Reference]" },
            refBinReader: { info: "[Circular Reference]" },
            refBinWriter: { info: "[Circular Reference]" },
          },
          service: "[Circular Reference]",
          localName: "getBakerList",
          clientStreaming: false,
        },
        {
          name: "GetPoolInfo",
          options: {},
          I: {
            defaultCheckDepth: 16,
            typeName: "concordium.v2.PoolInfoRequest",
            fields: [
              {
                no: 1,
                name: "block_hash",
                kind: "message",
                localName: "blockHash",
                jsonName: "blockHash",
                repeat: 0,
                opt: true,
              },
              {
                no: 2,
                name: "baker",
                kind: "message",
                localName: "baker",
                jsonName: "baker",
                repeat: 0,
                opt: true,
              },
            ],
            options: {},
            refTypeCheck: { fields: "[Circular Reference]" },
            refJsonReader: { info: "[Circular Reference]" },
            refJsonWriter: { fields: "[Circular Reference]" },
            refBinReader: { info: "[Circular Reference]" },
            refBinWriter: { info: "[Circular Reference]" },
          },
          O: {
            defaultCheckDepth: 16,
            typeName: "concordium.v2.PoolInfoResponse",
            fields: [
              {
                no: 1,
                name: "baker",
                kind: "message",
                localName: "baker",
                jsonName: "baker",
                repeat: 0,
                opt: true,
              },
              {
                no: 2,
                name: "address",
                kind: "message",
                localName: "address",
                jsonName: "address",
                repeat: 0,
                opt: true,
              },
              {
                no: 3,
                name: "equity_capital",
                kind: "message",
                localName: "equityCapital",
                jsonName: "equityCapital",
                repeat: 0,
                opt: true,
              },
              {
                no: 4,
                name: "delegated_capital",
                kind: "message",
                localName: "delegatedCapital",
                jsonName: "delegatedCapital",
                repeat: 0,
                opt: true,
              },
              {
                no: 5,
                name: "delegated_capital_cap",
                kind: "message",
                localName: "delegatedCapitalCap",
                jsonName: "delegatedCapitalCap",
                repeat: 0,
                opt: true,
              },
              {
                no: 6,
                name: "pool_info",
                kind: "message",
                localName: "poolInfo",
                jsonName: "poolInfo",
                repeat: 0,
                opt: true,
              },
              {
                no: 7,
                name: "equity_pending_change",
                kind: "message",
                localName: "equityPendingChange",
                jsonName: "equityPendingChange",
                repeat: 0,
                opt: true,
              },
              {
                no: 8,
                name: "current_payday_info",
                kind: "message",
                localName: "currentPaydayInfo",
                jsonName: "currentPaydayInfo",
                repeat: 0,
                opt: true,
              },
              {
                no: 9,
                name: "all_pool_total_capital",
                kind: "message",
                localName: "allPoolTotalCapital",
                jsonName: "allPoolTotalCapital",
                repeat: 0,
                opt: true,
              },
            ],
            options: {},
            refTypeCheck: { fields: "[Circular Reference]" },
            refJsonReader: { info: "[Circular Reference]" },
            refJsonWriter: { fields: "[Circular Reference]" },
            refBinReader: { info: "[Circular Reference]" },
            refBinWriter: { info: "[Circular Reference]" },
          },
          service: "[Circular Reference]",
          localName: "getPoolInfo",
          serverStreaming: false,
          clientStreaming: false,
        },
        {
          name: "GetPassiveDelegationInfo",
          options: {},
          I: "[Circular Reference]",
          O: {
            defaultCheckDepth: 16,
            typeName: "concordium.v2.PassiveDelegationInfo",
            fields: [
              {
                no: 1,
                name: "delegated_capital",
                kind: "message",
                localName: "delegatedCapital",
                jsonName: "delegatedCapital",
                repeat: 0,
                opt: true,
              },
              {
                no: 2,
                name: "commission_rates",
                kind: "message",
                localName: "commissionRates",
                jsonName: "commissionRates",
                repeat: 0,
                opt: true,
              },
              {
                no: 3,
                name: "current_payday_transaction_fees_earned",
                kind: "message",
                localName: "currentPaydayTransactionFeesEarned",
                jsonName: "currentPaydayTransactionFeesEarned",
                repeat: 0,
                opt: true,
              },
              {
                no: 4,
                name: "current_payday_delegated_capital",
                kind: "message",
                localName: "currentPaydayDelegatedCapital",
                jsonName: "currentPaydayDelegatedCapital",
                repeat: 0,
                opt: true,
              },
              {
                no: 5,
                name: "all_pool_total_capital",
                kind: "message",
                localName: "allPoolTotalCapital",
                jsonName: "allPoolTotalCapital",
                repeat: 0,
                opt: true,
              },
            ],
            options: {},
            refTypeCheck: { fields: "[Circular Reference]" },
            refJsonReader: { info: "[Circular Reference]" },
            refJsonWriter: { fields: "[Circular Reference]" },
            refBinReader: { info: "[Circular Reference]" },
            refBinWriter: { info: "[Circular Reference]" },
          },
          service: "[Circular Reference]",
          localName: "getPassiveDelegationInfo",
          serverStreaming: false,
          clientStreaming: false,
        },
        {
          name: "GetBlocksAtHeight",
          options: {},
          I: {
            defaultCheckDepth: 16,
            typeName: "concordium.v2.BlocksAtHeightRequest",
            fields: [
              {
                no: 1,
                name: "absolute",
                kind: "message",
                oneof: "blocksAtHeight",
                localName: "absolute",
                jsonName: "absolute",
                repeat: 0,
                opt: false,
              },
              {
                no: 2,
                name: "relative",
                kind: "message",
                oneof: "blocksAtHeight",
                localName: "relative",
                jsonName: "relative",
                repeat: 0,
                opt: false,
              },
            ],
            options: {},
            refTypeCheck: { fields: "[Circular Reference]" },
            refJsonReader: { info: "[Circular Reference]" },
            refJsonWriter: { fields: "[Circular Reference]" },
            refBinReader: { info: "[Circular Reference]" },
            refBinWriter: { info: "[Circular Reference]" },
          },
          O: {
            defaultCheckDepth: 16,
            typeName: "concordium.v2.BlocksAtHeightResponse",
            fields: [
              {
                no: 1,
                name: "blocks",
                kind: "message",
                repeat: 1,
                localName: "blocks",
                jsonName: "blocks",
                opt: false,
              },
            ],
            options: {},
            refTypeCheck: { fields: "[Circular Reference]" },
            refJsonReader: { info: "[Circular Reference]" },
            refJsonWriter: { fields: "[Circular Reference]" },
            refBinReader: { info: "[Circular Reference]" },
            refBinWriter: { info: "[Circular Reference]" },
          },
          service: "[Circular Reference]",
          localName: "getBlocksAtHeight",
          serverStreaming: false,
          clientStreaming: false,
        },
        {
          name: "GetTokenomicsInfo",
          options: {},
          I: "[Circular Reference]",
          O: {
            defaultCheckDepth: 16,
            typeName: "concordium.v2.TokenomicsInfo",
            fields: [
              {
                no: 1,
                name: "v0",
                kind: "message",
                oneof: "tokenomics",
                localName: "v0",
                jsonName: "v0",
                repeat: 0,
                opt: false,
              },
              {
                no: 2,
                name: "v1",
                kind: "message",
                oneof: "tokenomics",
                localName: "v1",
                jsonName: "v1",
                repeat: 0,
                opt: false,
              },
            ],
            options: {},
            refTypeCheck: { fields: "[Circular Reference]" },
            refJsonReader: { info: "[Circular Reference]" },
            refJsonWriter: { fields: "[Circular Reference]" },
            refBinReader: { info: "[Circular Reference]" },
            refBinWriter: { info: "[Circular Reference]" },
          },
          service: "[Circular Reference]",
          localName: "getTokenomicsInfo",
          serverStreaming: false,
          clientStreaming: false,
        },
        {
          name: "InvokeInstance",
          options: {},
          I: {
            defaultCheckDepth: 16,
            typeName: "concordium.v2.InvokeInstanceRequest",
            fields: [
              {
                no: 1,
                name: "block_hash",
                kind: "message",
                localName: "blockHash",
                jsonName: "blockHash",
                repeat: 0,
                opt: true,
              },
              {
                no: 2,
                name: "invoker",
                kind: "message",
                localName: "invoker",
                jsonName: "invoker",
                repeat: 0,
                opt: true,
              },
              {
                no: 3,
                name: "instance",
                kind: "message",
                localName: "instance",
                jsonName: "instance",
                repeat: 0,
                opt: true,
              },
              {
                no: 4,
                name: "amount",
                kind: "message",
                localName: "amount",
                jsonName: "amount",
                repeat: 0,
                opt: true,
              },
              {
                no: 5,
                name: "entrypoint",
                kind: "message",
                localName: "entrypoint",
                jsonName: "entrypoint",
                repeat: 0,
                opt: true,
              },
              {
                no: 6,
                name: "parameter",
                kind: "message",
                localName: "parameter",
                jsonName: "parameter",
                repeat: 0,
                opt: true,
              },
              {
                no: 7,
                name: "energy",
                kind: "message",
                localName: "energy",
                jsonName: "energy",
                repeat: 0,
                opt: true,
              },
            ],
            options: {},
            refTypeCheck: { fields: "[Circular Reference]" },
            refJsonReader: { info: "[Circular Reference]" },
            refJsonWriter: { fields: "[Circular Reference]" },
            refBinReader: { info: "[Circular Reference]" },
            refBinWriter: { info: "[Circular Reference]" },
          },
          O: {
            defaultCheckDepth: 16,
            typeName: "concordium.v2.InvokeInstanceResponse",
            fields: [
              {
                no: 1,
                name: "success",
                kind: "message",
                oneof: "result",
                localName: "success",
                jsonName: "success",
                repeat: 0,
                opt: false,
              },
              {
                no: 2,
                name: "failure",
                kind: "message",
                oneof: "result",
                localName: "failure",
                jsonName: "failure",
                repeat: 0,
                opt: false,
              },
            ],
            options: {},
            refTypeCheck: { fields: "[Circular Reference]" },
            refJsonReader: { info: "[Circular Reference]" },
            refJsonWriter: { fields: "[Circular Reference]" },
            refBinReader: { info: "[Circular Reference]" },
            refBinWriter: { info: "[Circular Reference]" },
          },
          service: "[Circular Reference]",
          localName: "invokeInstance",
          serverStreaming: false,
          clientStreaming: false,
        },
        {
          name: "GetPoolDelegators",
          serverStreaming: true,
          options: {},
          I: {
            defaultCheckDepth: 16,
            typeName: "concordium.v2.GetPoolDelegatorsRequest",
            fields: [
              {
                no: 1,
                name: "block_hash",
                kind: "message",
                localName: "blockHash",
                jsonName: "blockHash",
                repeat: 0,
                opt: true,
              },
              {
                no: 2,
                name: "baker",
                kind: "message",
                localName: "baker",
                jsonName: "baker",
                repeat: 0,
                opt: true,
              },
            ],
            options: {},
            refTypeCheck: { fields: "[Circular Reference]" },
            refJsonReader: { info: "[Circular Reference]" },
            refJsonWriter: { fields: "[Circular Reference]" },
            refBinReader: { info: "[Circular Reference]" },
            refBinWriter: { info: "[Circular Reference]" },
          },
          O: {
            defaultCheckDepth: 16,
            typeName: "concordium.v2.DelegatorInfo",
            fields: [
              {
                no: 1,
                name: "account",
                kind: "message",
                localName: "account",
                jsonName: "account",
                repeat: 0,
                opt: true,
              },
              {
                no: 2,
                name: "stake",
                kind: "message",
                localName: "stake",
                jsonName: "stake",
                repeat: 0,
                opt: true,
              },
              {
                no: 3,
                name: "pending_change",
                kind: "message",
                localName: "pendingChange",
                jsonName: "pendingChange",
                repeat: 0,
                opt: true,
              },
            ],
            options: {},
            refTypeCheck: { fields: "[Circular Reference]" },
            refJsonReader: { info: "[Circular Reference]" },
            refJsonWriter: { fields: "[Circular Reference]" },
            refBinReader: { info: "[Circular Reference]" },
            refBinWriter: { info: "[Circular Reference]" },
          },
          service: "[Circular Reference]",
          localName: "getPoolDelegators",
          clientStreaming: false,
        },
        {
          name: "GetPoolDelegatorsRewardPeriod",
          serverStreaming: true,
          options: {},
          I: "[Circular Reference]",
          O: {
            defaultCheckDepth: 16,
            typeName: "concordium.v2.DelegatorRewardPeriodInfo",
            fields: [
              {
                no: 1,
                name: "account",
                kind: "message",
                localName: "account",
                jsonName: "account",
                repeat: 0,
                opt: true,
              },
              {
                no: 2,
                name: "stake",
                kind: "message",
                localName: "stake",
                jsonName: "stake",
                repeat: 0,
                opt: true,
              },
            ],
            options: {},
            refTypeCheck: { fields: "[Circular Reference]" },
            refJsonReader: { info: "[Circular Reference]" },
            refJsonWriter: { fields: "[Circular Reference]" },
            refBinReader: { info: "[Circular Reference]" },
            refBinWriter: { info: "[Circular Reference]" },
          },
          service: "[Circular Reference]",
          localName: "getPoolDelegatorsRewardPeriod",
          clientStreaming: false,
        },
        {
          name: "GetPassiveDelegators",
          serverStreaming: true,
          options: {},
          I: "[Circular Reference]",
          O: "[Circular Reference]",
          service: "[Circular Reference]",
          localName: "getPassiveDelegators",
          clientStreaming: false,
        },
        {
          name: "GetPassiveDelegatorsRewardPeriod",
          serverStreaming: true,
          options: {},
          I: "[Circular Reference]",
          O: "[Circular Reference]",
          service: "[Circular Reference]",
          localName: "getPassiveDelegatorsRewardPeriod",
          clientStreaming: false,
        },
        {
          name: "GetBranches",
          options: {},
          I: "[Circular Reference]",
          O: {
            defaultCheckDepth: 16,
            typeName: "concordium.v2.Branch",
            fields: [
              {
                no: 1,
                name: "block_hash",
                kind: "message",
                localName: "blockHash",
                jsonName: "blockHash",
                repeat: 0,
                opt: true,
              },
              {
                no: 2,
                name: "children",
                kind: "message",
                repeat: 1,
                localName: "children",
                jsonName: "children",
                opt: false,
              },
            ],
            options: {},
            refTypeCheck: { fields: "[Circular Reference]" },
            refJsonReader: { info: "[Circular Reference]" },
            refJsonWriter: { fields: "[Circular Reference]" },
            refBinReader: { info: "[Circular Reference]" },
            refBinWriter: { info: "[Circular Reference]" },
          },
          service: "[Circular Reference]",
          localName: "getBranches",
          serverStreaming: false,
          clientStreaming: false,
        },
        {
          name: "GetElectionInfo",
          options: {},
          I: "[Circular Reference]",
          O: {
            defaultCheckDepth: 16,
            typeName: "concordium.v2.ElectionInfo",
            fields: [
              {
                no: 1,
                name: "election_difficulty",
                kind: "message",
                localName: "electionDifficulty",
                jsonName: "electionDifficulty",
                repeat: 0,
                opt: true,
              },
              {
                no: 2,
                name: "election_nonce",
                kind: "message",
                localName: "electionNonce",
                jsonName: "electionNonce",
                repeat: 0,
                opt: true,
              },
              {
                no: 3,
                name: "baker_election_info",
                kind: "message",
                repeat: 1,
                localName: "bakerElectionInfo",
                jsonName: "bakerElectionInfo",
                opt: false,
              },
            ],
            options: {},
            refTypeCheck: { fields: "[Circular Reference]" },
            refJsonReader: { info: "[Circular Reference]" },
            refJsonWriter: { fields: "[Circular Reference]" },
            refBinReader: { info: "[Circular Reference]" },
            refBinWriter: { info: "[Circular Reference]" },
          },
          service: "[Circular Reference]",
          localName: "getElectionInfo",
          serverStreaming: false,
          clientStreaming: false,
        },
        {
          name: "GetIdentityProviders",
          serverStreaming: true,
          options: {},
          I: "[Circular Reference]",
          O: {
            defaultCheckDepth: 16,
            typeName: "concordium.v2.IpInfo",
            fields: [
              {
                no: 1,
                name: "identity",
                kind: "message",
                localName: "identity",
                jsonName: "identity",
                repeat: 0,
                opt: true,
              },
              {
                no: 2,
                name: "description",
                kind: "message",
                localName: "description",
                jsonName: "description",
                repeat: 0,
                opt: true,
              },
              {
                no: 3,
                name: "verify_key",
                kind: "message",
                localName: "verifyKey",
                jsonName: "verifyKey",
                repeat: 0,
                opt: true,
              },
              {
                no: 4,
                name: "cdi_verify_key",
                kind: "message",
                localName: "cdiVerifyKey",
                jsonName: "cdiVerifyKey",
                repeat: 0,
                opt: true,
              },
            ],
            options: {},
            refTypeCheck: { fields: "[Circular Reference]" },
            refJsonReader: { info: "[Circular Reference]" },
            refJsonWriter: { fields: "[Circular Reference]" },
            refBinReader: { info: "[Circular Reference]" },
            refBinWriter: { info: "[Circular Reference]" },
          },
          service: "[Circular Reference]",
          localName: "getIdentityProviders",
          clientStreaming: false,
        },
        {
          name: "GetAnonymityRevokers",
          serverStreaming: true,
          options: {},
          I: "[Circular Reference]",
          O: {
            defaultCheckDepth: 16,
            typeName: "concordium.v2.ArInfo",
            fields: [
              {
                no: 1,
                name: "identity",
                kind: "message",
                localName: "identity",
                jsonName: "identity",
                repeat: 0,
                opt: true,
              },
              {
                no: 2,
                name: "description",
                kind: "message",
                localName: "description",
                jsonName: "description",
                repeat: 0,
                opt: true,
              },
              {
                no: 3,
                name: "public_key",
                kind: "message",
                localName: "publicKey",
                jsonName: "publicKey",
                repeat: 0,
                opt: true,
              },
            ],
            options: {},
            refTypeCheck: { fields: "[Circular Reference]" },
            refJsonReader: { info: "[Circular Reference]" },
            refJsonWriter: { fields: "[Circular Reference]" },
            refBinReader: { info: "[Circular Reference]" },
            refBinWriter: { info: "[Circular Reference]" },
          },
          service: "[Circular Reference]",
          localName: "getAnonymityRevokers",
          clientStreaming: false,
        },
        {
          name: "GetAccountNonFinalizedTransactions",
          serverStreaming: true,
          options: {},
          I: "[Circular Reference]",
          O: "[Circular Reference]",
          service: "[Circular Reference]",
          localName: "getAccountNonFinalizedTransactions",
          clientStreaming: false,
        },
        {
          name: "GetBlockTransactionEvents",
          serverStreaming: true,
          options: {},
          I: "[Circular Reference]",
          O: {
            defaultCheckDepth: 16,
            typeName: "concordium.v2.BlockItemSummary",
            fields: [
              {
                no: 1,
                name: "index",
                kind: "message",
                localName: "index",
                jsonName: "index",
                repeat: 0,
                opt: true,
              },
              {
                no: 2,
                name: "energy_cost",
                kind: "message",
                localName: "energyCost",
                jsonName: "energyCost",
                repeat: 0,
                opt: true,
              },
              {
                no: 3,
                name: "hash",
                kind: "message",
                localName: "hash",
                jsonName: "hash",
                repeat: 0,
                opt: true,
              },
              {
                no: 4,
                name: "account_transaction",
                kind: "message",
                oneof: "details",
                localName: "accountTransaction",
                jsonName: "accountTransaction",
                repeat: 0,
                opt: false,
              },
              {
                no: 5,
                name: "account_creation",
                kind: "message",
                oneof: "details",
                localName: "accountCreation",
                jsonName: "accountCreation",
                repeat: 0,
                opt: false,
              },
              {
                no: 6,
                name: "update",
                kind: "message",
                oneof: "details",
                localName: "update",
                jsonName: "update",
                repeat: 0,
                opt: false,
              },
            ],
            options: {},
            refTypeCheck: { fields: "[Circular Reference]" },
            refJsonReader: { info: "[Circular Reference]" },
            refJsonWriter: { fields: "[Circular Reference]" },
            refBinReader: { info: "[Circular Reference]" },
            refBinWriter: { info: "[Circular Reference]" },
          },
          service: "[Circular Reference]",
          localName: "getBlockTransactionEvents",
          clientStreaming: false,
        },
        {
          name: "GetBlockSpecialEvents",
          serverStreaming: true,
          options: {},
          I: "[Circular Reference]",
          O: {
            defaultCheckDepth: 16,
            typeName: "concordium.v2.BlockSpecialEvent",
            fields: [
              {
                no: 1,
                name: "baking_rewards",
                kind: "message",
                oneof: "event",
                localName: "bakingRewards",
                jsonName: "bakingRewards",
                repeat: 0,
                opt: false,
              },
              {
                no: 2,
                name: "mint",
                kind: "message",
                oneof: "event",
                localName: "mint",
                jsonName: "mint",
                repeat: 0,
                opt: false,
              },
              {
                no: 3,
                name: "finalization_rewards",
                kind: "message",
                oneof: "event",
                localName: "finalizationRewards",
                jsonName: "finalizationRewards",
                repeat: 0,
                opt: false,
              },
              {
                no: 4,
                name: "block_reward",
                kind: "message",
                oneof: "event",
                localName: "blockReward",
                jsonName: "blockReward",
                repeat: 0,
                opt: false,
              },
              {
                no: 5,
                name: "payday_foundation_reward",
                kind: "message",
                oneof: "event",
                localName: "paydayFoundationReward",
                jsonName: "paydayFoundationReward",
                repeat: 0,
                opt: false,
              },
              {
                no: 6,
                name: "payday_account_reward",
                kind: "message",
                oneof: "event",
                localName: "paydayAccountReward",
                jsonName: "paydayAccountReward",
                repeat: 0,
                opt: false,
              },
              {
                no: 7,
                name: "block_accrue_reward",
                kind: "message",
                oneof: "event",
                localName: "blockAccrueReward",
                jsonName: "blockAccrueReward",
                repeat: 0,
                opt: false,
              },
              {
                no: 8,
                name: "payday_pool_reward",
                kind: "message",
                oneof: "event",
                localName: "paydayPoolReward",
                jsonName: "paydayPoolReward",
                repeat: 0,
                opt: false,
              },
            ],
            options: {},
            refTypeCheck: { fields: "[Circular Reference]" },
            refJsonReader: { info: "[Circular Reference]" },
            refJsonWriter: { fields: "[Circular Reference]" },
            refBinReader: { info: "[Circular Reference]" },
            refBinWriter: { info: "[Circular Reference]" },
          },
          service: "[Circular Reference]",
          localName: "getBlockSpecialEvents",
          clientStreaming: false,
        },
        {
          name: "GetBlockPendingUpdates",
          serverStreaming: true,
          options: {},
          I: "[Circular Reference]",
          O: {
            defaultCheckDepth: 16,
            typeName: "concordium.v2.PendingUpdate",
            fields: [
              {
                no: 1,
                name: "effective_time",
                kind: "message",
                localName: "effectiveTime",
                jsonName: "effectiveTime",
                repeat: 0,
                opt: true,
              },
              {
                no: 2,
                name: "root_keys",
                kind: "message",
                oneof: "effect",
                localName: "rootKeys",
                jsonName: "rootKeys",
                repeat: 0,
                opt: false,
              },
              {
                no: 3,
                name: "level1_keys",
                kind: "message",
                oneof: "effect",
                localName: "level1Keys",
                jsonName: "level1Keys",
                repeat: 0,
                opt: false,
              },
              {
                no: 4,
                name: "level2_keys_cpv_0",
                kind: "message",
                oneof: "effect",
                localName: "level2KeysCpv0",
                jsonName: "level2KeysCpv0",
                repeat: 0,
                opt: false,
              },
              {
                no: 5,
                name: "level2_keys_cpv_1",
                kind: "message",
                oneof: "effect",
                localName: "level2KeysCpv1",
                jsonName: "level2KeysCpv1",
                repeat: 0,
                opt: false,
              },
              {
                no: 6,
                name: "protocol",
                kind: "message",
                oneof: "effect",
                localName: "protocol",
                jsonName: "protocol",
                repeat: 0,
                opt: false,
              },
              {
                no: 7,
                name: "election_difficulty",
                kind: "message",
                oneof: "effect",
                localName: "electionDifficulty",
                jsonName: "electionDifficulty",
                repeat: 0,
                opt: false,
              },
              {
                no: 8,
                name: "euro_per_energy",
                kind: "message",
                oneof: "effect",
                localName: "euroPerEnergy",
                jsonName: "euroPerEnergy",
                repeat: 0,
                opt: false,
              },
              {
                no: 9,
                name: "micro_ccd_per_euro",
                kind: "message",
                oneof: "effect",
                localName: "microCcdPerEuro",
                jsonName: "microCcdPerEuro",
                repeat: 0,
                opt: false,
              },
              {
                no: 10,
                name: "foundation_account",
                kind: "message",
                oneof: "effect",
                localName: "foundationAccount",
                jsonName: "foundationAccount",
                repeat: 0,
                opt: false,
              },
              {
                no: 11,
                name: "mint_distribution_cpv_0",
                kind: "message",
                oneof: "effect",
                localName: "mintDistributionCpv0",
                jsonName: "mintDistributionCpv0",
                repeat: 0,
                opt: false,
              },
              {
                no: 12,
                name: "mint_distribution_cpv_1",
                kind: "message",
                oneof: "effect",
                localName: "mintDistributionCpv1",
                jsonName: "mintDistributionCpv1",
                repeat: 0,
                opt: false,
              },
              {
                no: 13,
                name: "transaction_fee_distribution",
                kind: "message",
                oneof: "effect",
                localName: "transactionFeeDistribution",
                jsonName: "transactionFeeDistribution",
                repeat: 0,
                opt: false,
              },
              {
                no: 14,
                name: "gas_rewards",
                kind: "message",
                oneof: "effect",
                localName: "gasRewards",
                jsonName: "gasRewards",
                repeat: 0,
                opt: false,
              },
              {
                no: 15,
                name: "pool_parameters_cpv_0",
                kind: "message",
                oneof: "effect",
                localName: "poolParametersCpv0",
                jsonName: "poolParametersCpv0",
                repeat: 0,
                opt: false,
              },
              {
                no: 16,
                name: "pool_parameters_cpv_1",
                kind: "message",
                oneof: "effect",
                localName: "poolParametersCpv1",
                jsonName: "poolParametersCpv1",
                repeat: 0,
                opt: false,
              },
              {
                no: 17,
                name: "add_anonymity_revoker",
                kind: "message",
                oneof: "effect",
                localName: "addAnonymityRevoker",
                jsonName: "addAnonymityRevoker",
                repeat: 0,
                opt: false,
              },
              {
                no: 18,
                name: "add_identity_provider",
                kind: "message",
                oneof: "effect",
                localName: "addIdentityProvider",
                jsonName: "addIdentityProvider",
                repeat: 0,
                opt: false,
              },
              {
                no: 19,
                name: "cooldown_parameters",
                kind: "message",
                oneof: "effect",
                localName: "cooldownParameters",
                jsonName: "cooldownParameters",
                repeat: 0,
                opt: false,
              },
              {
                no: 20,
                name: "time_parameters",
                kind: "message",
                oneof: "effect",
                localName: "timeParameters",
                jsonName: "timeParameters",
                repeat: 0,
                opt: false,
              },
              {
                no: 21,
                name: "gas_rewards_cpv_2",
                kind: "message",
                oneof: "effect",
                localName: "gasRewardsCpv2",
                jsonName: "gasRewardsCpv2",
                repeat: 0,
                opt: false,
              },
              {
                no: 22,
                name: "timeout_parameters",
                kind: "message",
                oneof: "effect",
                localName: "timeoutParameters",
                jsonName: "timeoutParameters",
                repeat: 0,
                opt: false,
              },
              {
                no: 23,
                name: "min_block_time",
                kind: "message",
                oneof: "effect",
                localName: "minBlockTime",
                jsonName: "minBlockTime",
                repeat: 0,
                opt: false,
              },
              {
                no: 24,
                name: "block_energy_limit",
                kind: "message",
                oneof: "effect",
                localName: "blockEnergyLimit",
                jsonName: "blockEnergyLimit",
                repeat: 0,
                opt: false,
              },
              {
                no: 25,
                name: "finalization_committee_parameters",
                kind: "message",
                oneof: "effect",
                localName: "finalizationCommitteeParameters",
                jsonName: "finalizationCommitteeParameters",
                repeat: 0,
                opt: false,
              },
            ],
            options: {},
            refTypeCheck: { fields: "[Circular Reference]" },
            refJsonReader: { info: "[Circular Reference]" },
            refJsonWriter: { fields: "[Circular Reference]" },
            refBinReader: { info: "[Circular Reference]" },
            refBinWriter: { info: "[Circular Reference]" },
          },
          service: "[Circular Reference]",
          localName: "getBlockPendingUpdates",
          clientStreaming: false,
        },
        {
          name: "GetNextUpdateSequenceNumbers",
          options: {},
          I: "[Circular Reference]",
          O: {
            defaultCheckDepth: 16,
            typeName: "concordium.v2.NextUpdateSequenceNumbers",
            fields: [
              {
                no: 1,
                name: "root_keys",
                kind: "message",
                localName: "rootKeys",
                jsonName: "rootKeys",
                repeat: 0,
                opt: true,
              },
              {
                no: 2,
                name: "level1_keys",
                kind: "message",
                localName: "level1Keys",
                jsonName: "level1Keys",
                repeat: 0,
                opt: true,
              },
              {
                no: 3,
                name: "level2_keys",
                kind: "message",
                localName: "level2Keys",
                jsonName: "level2Keys",
                repeat: 0,
                opt: true,
              },
              {
                no: 4,
                name: "protocol",
                kind: "message",
                localName: "protocol",
                jsonName: "protocol",
                repeat: 0,
                opt: true,
              },
              {
                no: 5,
                name: "election_difficulty",
                kind: "message",
                localName: "electionDifficulty",
                jsonName: "electionDifficulty",
                repeat: 0,
                opt: true,
              },
              {
                no: 6,
                name: "euro_per_energy",
                kind: "message",
                localName: "euroPerEnergy",
                jsonName: "euroPerEnergy",
                repeat: 0,
                opt: true,
              },
              {
                no: 7,
                name: "micro_ccd_per_euro",
                kind: "message",
                localName: "microCcdPerEuro",
                jsonName: "microCcdPerEuro",
                repeat: 0,
                opt: true,
              },
              {
                no: 8,
                name: "foundation_account",
                kind: "message",
                localName: "foundationAccount",
                jsonName: "foundationAccount",
                repeat: 0,
                opt: true,
              },
              {
                no: 9,
                name: "mint_distribution",
                kind: "message",
                localName: "mintDistribution",
                jsonName: "mintDistribution",
                repeat: 0,
                opt: true,
              },
              {
                no: 10,
                name: "transaction_fee_distribution",
                kind: "message",
                localName: "transactionFeeDistribution",
                jsonName: "transactionFeeDistribution",
                repeat: 0,
                opt: true,
              },
              {
                no: 11,
                name: "gas_rewards",
                kind: "message",
                localName: "gasRewards",
                jsonName: "gasRewards",
                repeat: 0,
                opt: true,
              },
              {
                no: 12,
                name: "pool_parameters",
                kind: "message",
                localName: "poolParameters",
                jsonName: "poolParameters",
                repeat: 0,
                opt: true,
              },
              {
                no: 13,
                name: "add_anonymity_revoker",
                kind: "message",
                localName: "addAnonymityRevoker",
                jsonName: "addAnonymityRevoker",
                repeat: 0,
                opt: true,
              },
              {
                no: 14,
                name: "add_identity_provider",
                kind: "message",
                localName: "addIdentityProvider",
                jsonName: "addIdentityProvider",
                repeat: 0,
                opt: true,
              },
              {
                no: 15,
                name: "cooldown_parameters",
                kind: "message",
                localName: "cooldownParameters",
                jsonName: "cooldownParameters",
                repeat: 0,
                opt: true,
              },
              {
                no: 16,
                name: "time_parameters",
                kind: "message",
                localName: "timeParameters",
                jsonName: "timeParameters",
                repeat: 0,
                opt: true,
              },
              {
                no: 17,
                name: "timeout_parameters",
                kind: "message",
                localName: "timeoutParameters",
                jsonName: "timeoutParameters",
                repeat: 0,
                opt: true,
              },
              {
                no: 18,
                name: "min_block_time",
                kind: "message",
                localName: "minBlockTime",
                jsonName: "minBlockTime",
                repeat: 0,
                opt: true,
              },
              {
                no: 19,
                name: "block_energy_limit",
                kind: "message",
                localName: "blockEnergyLimit",
                jsonName: "blockEnergyLimit",
                repeat: 0,
                opt: true,
              },
              {
                no: 20,
                name: "finalization_committee_parameters",
                kind: "message",
                localName: "finalizationCommitteeParameters",
                jsonName: "finalizationCommitteeParameters",
                repeat: 0,
                opt: true,
              },
            ],
            options: {},
            refTypeCheck: { fields: "[Circular Reference]" },
            refJsonReader: { info: "[Circular Reference]" },
            refJsonWriter: { fields: "[Circular Reference]" },
            refBinReader: { info: "[Circular Reference]" },
            refBinWriter: { info: "[Circular Reference]" },
          },
          service: "[Circular Reference]",
          localName: "getNextUpdateSequenceNumbers",
          serverStreaming: false,
          clientStreaming: false,
        },
        {
          name: "GetBakerEarliestWinTime",
          options: {},
          I: "[Circular Reference]",
          O: {
            defaultCheckDepth: 16,
            typeName: "concordium.v2.Timestamp",
            fields: [
              {
                no: 1,
                name: "value",
                kind: "scalar",
                T: 4,
                L: 0,
                localName: "value",
                jsonName: "value",
                repeat: 0,
                opt: false,
              },
            ],
            options: {},
            refTypeCheck: { fields: "[Circular Reference]" },
            refJsonReader: { info: "[Circular Reference]" },
            refJsonWriter: { fields: "[Circular Reference]" },
            refBinReader: { info: "[Circular Reference]" },
            refBinWriter: { info: "[Circular Reference]" },
          },
          service: "[Circular Reference]",
          localName: "getBakerEarliestWinTime",
          serverStreaming: false,
          clientStreaming: false,
        },
        {
          name: "Shutdown",
          options: {},
          I: "[Circular Reference]",
          O: "[Circular Reference]",
          service: "[Circular Reference]",
          localName: "shutdown",
          serverStreaming: false,
          clientStreaming: false,
        },
        {
          name: "PeerConnect",
          options: {},
          I: {
            defaultCheckDepth: 16,
            typeName: "concordium.v2.IpSocketAddress",
            fields: [
              {
                no: 1,
                name: "ip",
                kind: "message",
                localName: "ip",
                jsonName: "ip",
                repeat: 0,
                opt: true,
              },
              {
                no: 2,
                name: "port",
                kind: "message",
                localName: "port",
                jsonName: "port",
                repeat: 0,
                opt: true,
              },
            ],
            options: {},
            refTypeCheck: { fields: "[Circular Reference]" },
            refJsonReader: { info: "[Circular Reference]" },
            refJsonWriter: { fields: "[Circular Reference]" },
            refBinReader: { info: "[Circular Reference]" },
            refBinWriter: { info: "[Circular Reference]" },
          },
          O: "[Circular Reference]",
          service: "[Circular Reference]",
          localName: "peerConnect",
          serverStreaming: false,
          clientStreaming: false,
        },
        {
          name: "PeerDisconnect",
          options: {},
          I: "[Circular Reference]",
          O: "[Circular Reference]",
          service: "[Circular Reference]",
          localName: "peerDisconnect",
          serverStreaming: false,
          clientStreaming: false,
        },
        {
          name: "GetBannedPeers",
          options: {},
          I: "[Circular Reference]",
          O: {
            defaultCheckDepth: 16,
            typeName: "concordium.v2.BannedPeers",
            fields: [
              {
                no: 1,
                name: "peers",
                kind: "message",
                repeat: 1,
                localName: "peers",
                jsonName: "peers",
                opt: false,
              },
            ],
            options: {},
            refTypeCheck: { fields: "[Circular Reference]" },
            refJsonReader: { info: "[Circular Reference]" },
            refJsonWriter: { fields: "[Circular Reference]" },
            refBinReader: { info: "[Circular Reference]" },
            refBinWriter: { info: "[Circular Reference]" },
          },
          service: "[Circular Reference]",
          localName: "getBannedPeers",
          serverStreaming: false,
          clientStreaming: false,
        },
        {
          name: "BanPeer",
          options: {},
          I: {
            defaultCheckDepth: 16,
            typeName: "concordium.v2.PeerToBan",
            fields: [
              {
                no: 1,
                name: "ip_address",
                kind: "message",
                localName: "ipAddress",
                jsonName: "ipAddress",
                repeat: 0,
                opt: true,
              },
            ],
            options: {},
            refTypeCheck: { fields: "[Circular Reference]" },
            refJsonReader: { info: "[Circular Reference]" },
            refJsonWriter: { fields: "[Circular Reference]" },
            refBinReader: { info: "[Circular Reference]" },
            refBinWriter: { info: "[Circular Reference]" },
          },
          O: "[Circular Reference]",
          service: "[Circular Reference]",
          localName: "banPeer",
          serverStreaming: false,
          clientStreaming: false,
        },
        {
          name: "UnbanPeer",
          options: {},
          I: {
            defaultCheckDepth: 16,
            typeName: "concordium.v2.BannedPeer",
            fields: [
              {
                no: 1,
                name: "ip_address",
                kind: "message",
                localName: "ipAddress",
                jsonName: "ipAddress",
                repeat: 0,
                opt: true,
              },
            ],
            options: {},
            refTypeCheck: { fields: "[Circular Reference]" },
            refJsonReader: { info: "[Circular Reference]" },
            refJsonWriter: { fields: "[Circular Reference]" },
            refBinReader: { info: "[Circular Reference]" },
            refBinWriter: { info: "[Circular Reference]" },
          },
          O: "[Circular Reference]",
          service: "[Circular Reference]",
          localName: "unbanPeer",
          serverStreaming: false,
          clientStreaming: false,
        },
        {
          name: "DumpStart",
          options: {},
          I: {
            defaultCheckDepth: 16,
            typeName: "concordium.v2.DumpRequest",
            fields: [
              {
                no: 1,
                name: "file",
                kind: "scalar",
                T: 9,
                localName: "file",
                jsonName: "file",
                repeat: 0,
                opt: false,
              },
              {
                no: 2,
                name: "raw",
                kind: "scalar",
                T: 8,
                localName: "raw",
                jsonName: "raw",
                repeat: 0,
                opt: false,
              },
            ],
            options: {},
            refTypeCheck: { fields: "[Circular Reference]" },
            refJsonReader: { info: "[Circular Reference]" },
            refJsonWriter: { fields: "[Circular Reference]" },
            refBinReader: { info: "[Circular Reference]" },
            refBinWriter: { info: "[Circular Reference]" },
          },
          O: "[Circular Reference]",
          service: "[Circular Reference]",
          localName: "dumpStart",
          serverStreaming: false,
          clientStreaming: false,
        },
        {
          name: "DumpStop",
          options: {},
          I: "[Circular Reference]",
          O: "[Circular Reference]",
          service: "[Circular Reference]",
          localName: "dumpStop",
          serverStreaming: false,
          clientStreaming: false,
        },
        {
          name: "GetPeersInfo",
          options: {},
          I: "[Circular Reference]",
          O: {
            defaultCheckDepth: 16,
            typeName: "concordium.v2.PeersInfo",
            fields: [
              {
                no: 1,
                name: "peers",
                kind: "message",
                repeat: 1,
                localName: "peers",
                jsonName: "peers",
                opt: false,
              },
            ],
            options: {},
            refTypeCheck: { fields: "[Circular Reference]" },
            refJsonReader: { info: "[Circular Reference]" },
            refJsonWriter: { fields: "[Circular Reference]" },
            refBinReader: { info: "[Circular Reference]" },
            refBinWriter: { info: "[Circular Reference]" },
          },
          service: "[Circular Reference]",
          localName: "getPeersInfo",
          serverStreaming: false,
          clientStreaming: false,
        },
        {
          name: "GetNodeInfo",
          options: {},
          I: "[Circular Reference]",
          O: {
            defaultCheckDepth: 16,
            typeName: "concordium.v2.NodeInfo",
            fields: [
              {
                no: 1,
                name: "peer_version",
                kind: "scalar",
                T: 9,
                localName: "peerVersion",
                jsonName: "peerVersion",
                repeat: 0,
                opt: false,
              },
              {
                no: 3,
                name: "local_time",
                kind: "message",
                localName: "localTime",
                jsonName: "localTime",
                repeat: 0,
                opt: true,
              },
              {
                no: 4,
                name: "peer_uptime",
                kind: "message",
                localName: "peerUptime",
                jsonName: "peerUptime",
                repeat: 0,
                opt: true,
              },
              {
                no: 5,
                name: "network_info",
                kind: "message",
                localName: "networkInfo",
                jsonName: "networkInfo",
                repeat: 0,
                opt: true,
              },
              {
                no: 6,
                name: "bootstrapper",
                kind: "message",
                oneof: "details",
                localName: "bootstrapper",
                jsonName: "bootstrapper",
                repeat: 0,
                opt: false,
              },
              {
                no: 7,
                name: "node",
                kind: "message",
                oneof: "details",
                localName: "node",
                jsonName: "node",
                repeat: 0,
                opt: false,
              },
            ],
            options: {},
            refTypeCheck: { fields: "[Circular Reference]" },
            refJsonReader: { info: "[Circular Reference]" },
            refJsonWriter: { fields: "[Circular Reference]" },
            refBinReader: { info: "[Circular Reference]" },
            refBinWriter: { info: "[Circular Reference]" },
          },
          service: "[Circular Reference]",
          localName: "getNodeInfo",
          serverStreaming: false,
          clientStreaming: false,
        },
        {
          name: "SendBlockItem",
          options: {},
          I: {
            defaultCheckDepth: 16,
            typeName: "concordium.v2.SendBlockItemRequest",
            fields: [
              {
                no: 1,
                name: "account_transaction",
                kind: "message",
                oneof: "blockItem",
                localName: "accountTransaction",
                jsonName: "accountTransaction",
                repeat: 0,
                opt: false,
              },
              {
                no: 2,
                name: "credential_deployment",
                kind: "message",
                oneof: "blockItem",
                localName: "credentialDeployment",
                jsonName: "credentialDeployment",
                repeat: 0,
                opt: false,
              },
              {
                no: 3,
                name: "update_instruction",
                kind: "message",
                oneof: "blockItem",
                localName: "updateInstruction",
                jsonName: "updateInstruction",
                repeat: 0,
                opt: false,
              },
            ],
            options: {},
            refTypeCheck: { fields: "[Circular Reference]" },
            refJsonReader: { info: "[Circular Reference]" },
            refJsonWriter: { fields: "[Circular Reference]" },
            refBinReader: { info: "[Circular Reference]" },
            refBinWriter: { info: "[Circular Reference]" },
          },
          O: "[Circular Reference]",
          service: "[Circular Reference]",
          localName: "sendBlockItem",
          serverStreaming: false,
          clientStreaming: false,
        },
        {
          name: "GetAccountTransactionSignHash",
          options: {},
          I: {
            defaultCheckDepth: 16,
            typeName: "concordium.v2.PreAccountTransaction",
            fields: [
              {
                no: 1,
                name: "header",
                kind: "message",
                localName: "header",
                jsonName: "header",
                repeat: 0,
                opt: true,
              },
              {
                no: 2,
                name: "payload",
                kind: "message",
                localName: "payload",
                jsonName: "payload",
                repeat: 0,
                opt: true,
              },
            ],
            options: {},
            refTypeCheck: { fields: "[Circular Reference]" },
            refJsonReader: { info: "[Circular Reference]" },
            refJsonWriter: { fields: "[Circular Reference]" },
            refBinReader: { info: "[Circular Reference]" },
            refBinWriter: { info: "[Circular Reference]" },
          },
          O: {
            defaultCheckDepth: 16,
            typeName: "concordium.v2.AccountTransactionSignHash",
            fields: [
              {
                no: 1,
                name: "value",
                kind: "scalar",
                T: 12,
                localName: "value",
                jsonName: "value",
                repeat: 0,
                opt: false,
              },
            ],
            options: {},
            refTypeCheck: { fields: "[Circular Reference]" },
            refJsonReader: { info: "[Circular Reference]" },
            refJsonWriter: { fields: "[Circular Reference]" },
            refBinReader: { info: "[Circular Reference]" },
            refBinWriter: { info: "[Circular Reference]" },
          },
          service: "[Circular Reference]",
          localName: "getAccountTransactionSignHash",
          serverStreaming: false,
          clientStreaming: false,
        },
        {
          name: "GetBlockChainParameters",
          options: {},
          I: "[Circular Reference]",
          O: {
            defaultCheckDepth: 16,
            typeName: "concordium.v2.ChainParameters",
            fields: [
              {
                no: 1,
                name: "v0",
                kind: "message",
                oneof: "parameters",
                localName: "v0",
                jsonName: "v0",
                repeat: 0,
                opt: false,
              },
              {
                no: 2,
                name: "v1",
                kind: "message",
                oneof: "parameters",
                localName: "v1",
                jsonName: "v1",
                repeat: 0,
                opt: false,
              },
              {
                no: 3,
                name: "v2",
                kind: "message",
                oneof: "parameters",
                localName: "v2",
                jsonName: "v2",
                repeat: 0,
                opt: false,
              },
            ],
            options: {},
            refTypeCheck: { fields: "[Circular Reference]" },
            refJsonReader: { info: "[Circular Reference]" },
            refJsonWriter: { fields: "[Circular Reference]" },
            refBinReader: { info: "[Circular Reference]" },
            refBinWriter: { info: "[Circular Reference]" },
          },
          service: "[Circular Reference]",
          localName: "getBlockChainParameters",
          serverStreaming: false,
          clientStreaming: false,
        },
        {
          name: "GetBlockFinalizationSummary",
          options: {},
          I: "[Circular Reference]",
          O: {
            defaultCheckDepth: 16,
            typeName: "concordium.v2.BlockFinalizationSummary",
            fields: [
              {
                no: 1,
                name: "none",
                kind: "message",
                oneof: "summary",
                localName: "none",
                jsonName: "none",
                repeat: 0,
                opt: false,
              },
              {
                no: 2,
                name: "record",
                kind: "message",
                oneof: "summary",
                localName: "record",
                jsonName: "record",
                repeat: 0,
                opt: false,
              },
            ],
            options: {},
            refTypeCheck: { fields: "[Circular Reference]" },
            refJsonReader: { info: "[Circular Reference]" },
            refJsonWriter: { fields: "[Circular Reference]" },
            refBinReader: { info: "[Circular Reference]" },
            refBinWriter: { info: "[Circular Reference]" },
          },
          service: "[Circular Reference]",
          localName: "getBlockFinalizationSummary",
          serverStreaming: false,
          clientStreaming: false,
        },
        {
          name: "GetBlockItems",
          serverStreaming: true,
          options: {},
          I: "[Circular Reference]",
          O: {
            defaultCheckDepth: 16,
            typeName: "concordium.v2.BlockItem",
            fields: [
              {
                no: 1,
                name: "hash",
                kind: "message",
                localName: "hash",
                jsonName: "hash",
                repeat: 0,
                opt: true,
              },
              {
                no: 2,
                name: "account_transaction",
                kind: "message",
                oneof: "blockItem",
                localName: "accountTransaction",
                jsonName: "accountTransaction",
                repeat: 0,
                opt: false,
              },
              {
                no: 3,
                name: "credential_deployment",
                kind: "message",
                oneof: "blockItem",
                localName: "credentialDeployment",
                jsonName: "credentialDeployment",
                repeat: 0,
                opt: false,
              },
              {
                no: 4,
                name: "update_instruction",
                kind: "message",
                oneof: "blockItem",
                localName: "updateInstruction",
                jsonName: "updateInstruction",
                repeat: 0,
                opt: false,
              },
            ],
            options: {},
            refTypeCheck: { fields: "[Circular Reference]" },
            refJsonReader: { info: "[Circular Reference]" },
            refJsonWriter: { fields: "[Circular Reference]" },
            refBinReader: { info: "[Circular Reference]" },
            refBinWriter: { info: "[Circular Reference]" },
          },
          service: "[Circular Reference]",
          localName: "getBlockItems",
          clientStreaming: false,
        },
        {
          name: "GetBakersRewardPeriod",
          serverStreaming: true,
          options: {},
          I: "[Circular Reference]",
          O: {
            defaultCheckDepth: 16,
            typeName: "concordium.v2.BakerRewardPeriodInfo",
            fields: [
              {
                no: 1,
                name: "baker",
                kind: "message",
                localName: "baker",
                jsonName: "baker",
                repeat: 0,
                opt: true,
              },
              {
                no: 2,
                name: "effective_stake",
                kind: "message",
                localName: "effectiveStake",
                jsonName: "effectiveStake",
                repeat: 0,
                opt: true,
              },
              {
                no: 3,
                name: "commission_rates",
                kind: "message",
                localName: "commissionRates",
                jsonName: "commissionRates",
                repeat: 0,
                opt: true,
              },
              {
                no: 4,
                name: "equity_capital",
                kind: "message",
                localName: "equityCapital",
                jsonName: "equityCapital",
                repeat: 0,
                opt: true,
              },
              {
                no: 5,
                name: "delegated_capital",
                kind: "message",
                localName: "delegatedCapital",
                jsonName: "delegatedCapital",
                repeat: 0,
                opt: true,
              },
              {
                no: 6,
                name: "is_finalizer",
                kind: "scalar",
                T: 8,
                localName: "isFinalizer",
                jsonName: "isFinalizer",
                repeat: 0,
                opt: false,
              },
            ],
            options: {},
            refTypeCheck: { fields: "[Circular Reference]" },
            refJsonReader: { info: "[Circular Reference]" },
            refJsonWriter: { fields: "[Circular Reference]" },
            refBinReader: { info: "[Circular Reference]" },
            refBinWriter: { info: "[Circular Reference]" },
          },
          service: "[Circular Reference]",
          localName: "getBakersRewardPeriod",
          clientStreaming: false,
        },
        {
          name: "GetBlockCertificates",
          options: {},
          I: "[Circular Reference]",
          O: {
            defaultCheckDepth: 16,
            typeName: "concordium.v2.BlockCertificates",
            fields: [
              {
                no: 1,
                name: "quorum_certificate",
                kind: "message",
                localName: "quorumCertificate",
                jsonName: "quorumCertificate",
                repeat: 0,
                opt: true,
              },
              {
                no: 2,
                name: "timeout_certificate",
                kind: "message",
                localName: "timeoutCertificate",
                jsonName: "timeoutCertificate",
                repeat: 0,
                opt: true,
              },
              {
                no: 3,
                name: "epoch_finalization_entry",
                kind: "message",
                localName: "epochFinalizationEntry",
                jsonName: "epochFinalizationEntry",
                repeat: 0,
                opt: true,
              },
            ],
            options: {},
            refTypeCheck: { fields: "[Circular Reference]" },
            refJsonReader: { info: "[Circular Reference]" },
            refJsonWriter: { fields: "[Circular Reference]" },
            refBinReader: { info: "[Circular Reference]" },
            refBinWriter: { info: "[Circular Reference]" },
          },
          service: "[Circular Reference]",
          localName: "getBlockCertificates",
          serverStreaming: false,
          clientStreaming: false,
        },
        {
          name: "GetWinningBakersEpoch",
          serverStreaming: true,
          options: {},
          I: {
            defaultCheckDepth: 16,
            typeName: "concordium.v2.EpochRequest",
            fields: [
              {
                no: 1,
                name: "relative_epoch",
                kind: "message",
                oneof: "epochRequestInput",
                localName: "relativeEpoch",
                jsonName: "relativeEpoch",
                repeat: 0,
                opt: false,
              },
              {
                no: 2,
                name: "block_hash",
                kind: "message",
                oneof: "epochRequestInput",
                localName: "blockHash",
                jsonName: "blockHash",
                repeat: 0,
                opt: false,
              },
            ],
            options: {},
            refTypeCheck: { fields: "[Circular Reference]" },
            refJsonReader: { info: "[Circular Reference]" },
            refJsonWriter: { fields: "[Circular Reference]" },
            refBinReader: { info: "[Circular Reference]" },
            refBinWriter: { info: "[Circular Reference]" },
          },
          O: {
            defaultCheckDepth: 16,
            typeName: "concordium.v2.WinningBaker",
            fields: [
              {
                no: 1,
                name: "round",
                kind: "message",
                localName: "round",
                jsonName: "round",
                repeat: 0,
                opt: true,
              },
              {
                no: 2,
                name: "winner",
                kind: "message",
                localName: "winner",
                jsonName: "winner",
                repeat: 0,
                opt: true,
              },
              {
                no: 3,
                name: "present",
                kind: "scalar",
                T: 8,
                localName: "present",
                jsonName: "present",
                repeat: 0,
                opt: false,
              },
            ],
            options: {},
            refTypeCheck: { fields: "[Circular Reference]" },
            refJsonReader: { info: "[Circular Reference]" },
            refJsonWriter: { fields: "[Circular Reference]" },
            refBinReader: { info: "[Circular Reference]" },
            refBinWriter: { info: "[Circular Reference]" },
          },
          service: "[Circular Reference]",
          localName: "getWinningBakersEpoch",
          clientStreaming: false,
        },
        {
          name: "GetFirstBlockEpoch",
          options: {},
          I: "[Circular Reference]",
          O: "[Circular Reference]",
          service: "[Circular Reference]",
          localName: "getFirstBlockEpoch",
          serverStreaming: false,
          clientStreaming: false,
        },
      ],
      options: "[Circular Reference]",
    },
  },
};

module.exports = {
  providernode,
};
